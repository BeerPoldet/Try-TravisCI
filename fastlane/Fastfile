# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

xcodeproj = ENV["XCODE_PROJECT"]
scheme = ENV["XCODE_SCHEME"]

default_platform(:ios)

def do_increment_build_number(xcodeproj)
  build_number = [
    get_build_number(xcodeproj: xcodeproj).to_i, 
    latest_testflight_build_number
  ].max + 1
  increment_build_number(
    build_number: build_number,
    xcodeproj: xcodeproj
  )
  build_number
end

def commit_and_push(xcodeproj, build_number, build_type)
  commit_version_bump(
    xcodeproj: xcodeproj,
    message: format("[SKIP CI] New Build: %d 🎁", build_number),
    force: true
  )
  tag = build_type == 'prod' ? "v#{build_number}" : "v#{build_number}-#{build_type}"
  add_git_tag(tag: tag)
  push_to_git_remote
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    ensure_git_status_clean
    build_number = do_increment_build_number(xcodeproj)
    build_app(
      project: xcodeproj,
      scheme: scheme
    )
    changelog_from_git_commits(
      merge_commit_filtering: "exclude_merges"
    )

    build_type = 'beta'
    commit_and_push(xcodeproj, build_number, build_type)

    upload_to_testflight(
      groups: ['App Store Connect Users'],
      skip_waiting_for_build_processing: false
    )
    
    # upload_to_app_store(
    #   force: true,
    #   skip_metadata: true,
    #   skip_screenshots: true,
    #   skip_app_version_update: true,
    #   submit_for_review: false,
    #   keywords: {
    #     'default' => 'keyword-qa',
    #     'th-TH' => 'keyword-qa-th'
    #   },
    #   promotional_text: {
    #     'default' => 'promotional_text-qa',
    #     'th-TH' => 'promotional_text-qa-th'
    #   },
    #   release_notes: {
    #     'default' => "Shiny and new",
    #     'th-TH' => "ทดสอบ"
    #   }
    # )
  end

  lane :test do
    run_tests(scheme: scheme)
  end
end