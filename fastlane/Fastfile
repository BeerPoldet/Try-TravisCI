# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

xcodeproj = ENV["XCODE_PROJECT"]
scheme = ENV["XCODE_SCHEME"]

# setup_travis

default_platform(:ios)

def increment_build_number_then_remote_push(xcodeproj)
  build_number = [
    get_build_number(xcodeproj: xcodeproj).to_i, 
    latest_testflight_build_number
  ].max + 1

  # Increment the build number (not the version number)
  # Providing the xcodeproj is optional
  increment_build_number(
    build_number: build_number,
    xcodeproj: xcodeproj
  )

  # Commit the version bump
  commit_version_bump(xcodeproj: xcodeproj)

  # Add a git tag for this build. This will automatically
  # use an appropriate git tag name
  add_git_tag

  # Push the new commit and tag back to your git remote
  sh 'git config --global user.email "$GIT_USER_EMAIL"'
  sh 'git config --global user.name "$GIT_USER_NAME"'
  sh 'git remote add origin https://${GIT_TOKEN}@github.com/BeerPoldet/Try-TravisCI.git'

  push_to_git_remote
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    ensure_git_status_clean
    increment_build_number_then_remote_push(xcodeproj)
    build_app(
      project: xcodeproj,
      scheme: scheme, 
      codesigning_identity: ENV["DEVELOPER_NAME"],
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
          ENV["BUNDLE_ID"] => ENV["PROFILE_NAME"]
        }
      }
    )
    changelog_from_git_commits
    upload_to_testflight
  end

  lane :test do
    run_tests(scheme: scheme)
  end
end